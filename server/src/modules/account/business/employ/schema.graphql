input EmployInput {
  id: ID
  position: String!
  description: String!
  area: String!
  skills: [String]
  minStudy: String!
  minExperience: Int!
  language: [String]
  travel: String!
  residence: String!
  country: String!
  departament: String!
  town: String!
  time: String!
  contract: String!
  minSalary: BigInt
  maxSalary: BigInt
  currency: String
}

"""
The type `Employ` is used here and in the `search`
"""
type Employ {
  id: ID
  position: String!
  description: String!
  area: String!
  skills: [String]
  minStudy: String!
  minExperience: Int!
  language: [String]
  travel: String!
  residence: String!
  country: String!
  departament: String!
  town: String!
  time: String!
  contract: String!
  minSalary: BigInt
  maxSalary: BigInt
  currency: String
}

type Query {
  employs(businessId: ID!, limit: Int = 0): [Employ]
  employ(employId: ID!): Employ
}

type Mutation {
  employ(id: ID!, employ: EmployInput): [Error!]
  applyEmploy(
    userId: ID!
    userName: String!
    userLastname: String!
    email: String!
    position: String!
  ): Boolean!
  deleteEmploy(employId: ID!): Boolean!
}
